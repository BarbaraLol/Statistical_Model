# Load required libraries
#library(tidyverse)
library(mgcv)        # GAMs
library(randomForest)
install.packages("randomForest")
library(randomForest)
install.packages("caret")
library(caret)
# Load required libraries
#library(tidyverse)
library(mgcv)        # GAMs
library(randomForest)
library(caret)
library(Metrics)
library(ROCR)
library(gridExtra)
#library(DiagrammeR)
# Set the number of CPU cores to use
num_cores <- parallel::detectCores()
cat("Number of CPU cores:", num_cores, "\n")
# Define the current working directory
cwd <- getwd()
# Load the data
data <- read.csv(file.path(cwd, 'health_data.csv'))
# Create a working copy to avoid modifying the original data
df <- data
# Define the list of categorical variables
categorical <- c('gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active', 'cardio')
# Replace infinite values with NA in the entire data frame
df <- as.data.frame(lapply(df, function(x) replace(x, is.infinite(x), NA)))
# Remove NaNs, although according to the data description there are no NaNs
df <- na.omit(df)
# Drop the id column and -1
df <- df[, !(names(df) %in% c('id', 'Unnamed: 0'))]
# Convert age in days
df$age <- df$age / 365.25
# Filter for impossible values for height, weight, ap_hi, ap_lo
df <- df[df$height > 130 & df$height < 220, ]
df <- df[df$weight > 30 & df$weight < 200, ]
df <- df[df$ap_hi > 60 & df$ap_hi < 240, ]
df <- df[df$ap_lo > 40 & df$ap_lo < 200, ]
df <- df[df$age < 100, ]
# Add a new column for the BMI
df$BMI <- df$weight / (df$height / 100)^2
# Filter for reasonable values for BMI
df <- df[df$BMI > 6 & df$BMI < 70, ]
# Convert all categorical variables to factors
df[categorical] <- lapply(df[categorical], as.factor)
# Reset index for reasons
df <- df[order(names(df))]
# Put the cardio column at the end
df <- df[, c(names(df)[!(names(df) %in% 'cardio')], 'cardio')]
# Create a copy of the cleaned dataset to use for EDA
df_eda <- df
#########################
## Numerical Variables ##
#########################
par(mfrow=c(2, 2), mar=c(5, 4, 4, 2) + 0.1, oma=c(0, 0, 2, 0))
hist(df_eda$age, breaks=seq(min(df_eda$age), max(df_eda$age) + 1.5, by=1.5), col='lightblue', main='Age Distribution', xlab='Age')
hist(df_eda$height, breaks=seq(min(df_eda$height), max(df_eda$height) + 2, by=2), col='lightblue', main='Height Distribution', xlab='Height')
hist(df_eda$weight, breaks=seq(min(df_eda$weight), max(df_eda$weight) + 3, by=3), col='lightblue', main='Weight Distribution', xlab='Weight')
hist(df_eda$BMI, breaks=seq(min(df_eda$BMI), max(df_eda$BMI) + 1, by=1), col='lightblue', main='BMI Distribution', xlab='BMI')
mtext("Numeric Variables", outer=TRUE, cex=1.5)
###########################
## Categorical Variables ##
###########################
par(mfrow=c(2, 3), mar=c(5, 4, 4, 2) + 0.1, oma=c(0, 0, 2, 0))
barplot(table(df_eda$gender), col='lightblue', main='Gender Distribution', xlab='Gender')
barplot(table(df_eda$cholesterol), col='lightblue', main='Cholesterol Distribution', xlab='Cholesterol')
barplot(table(df_eda$gluc), col='lightblue', main='Glucose Distribution', xlab='Glucose')
barplot(table(df_eda$smoke), col='lightblue', main='Smoking Distribution', xlab='Smoking')
barplot(table(df_eda$alco), col='lightblue', main='Alcohol Consumption Distribution', xlab='Alcohol Consumption')
barplot(table(df_eda$active), col='lightblue', main='Physical Activity Distribution', xlab='Physical Activity')
mtext("Categorical Variables", outer=TRUE, cex=1.5)
# Create a copy of the cleaned dataset to use for EDA
df_eda <- df
####################################################
## CORRELATION MATRIX WITH HIGHLIGHTED BOTTOM ROW ##
####################################################
# Create an upper triangle mask
mask_upper <- matrix(upper.tri(df_eda), nrow = ncol(df_eda), ncol = ncol(df_eda))
# Create a mask for all but the bottom row (for highlighting)
mask_not_bottom <- matrix(TRUE, nrow = ncol(df_eda), ncol = ncol(df_eda))
mask_not_bottom[nrow(mask_not_bottom), ] <- FALSE  # Unmask the bottom row
# Plot the main heatmap with the upper triangle masked
heatmap(df_eda %>% cor() %>% as.matrix(),
Rowv = NA, Colv = NA,
col = colorRampPalette(c("blue", "white", "red"))(30),
main = 'Enhanced Correlation Matrix with Bottom Row Highlighted',
margins = c(5,5),
cexRow = 1, cexCol = 1,
symm = TRUE,
revC = TRUE)
